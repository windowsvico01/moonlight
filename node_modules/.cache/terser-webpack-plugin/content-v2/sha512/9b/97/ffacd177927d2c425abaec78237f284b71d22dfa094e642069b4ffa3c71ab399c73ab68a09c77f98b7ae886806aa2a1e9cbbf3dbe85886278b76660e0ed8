{"map":"{\"version\":3,\"sources\":[\"/Users/yangpu-bt/personal/moonlt3/src/containers/Pages/Home/reducer.js\",\"/Users/yangpu-bt/personal/moonlt3/src/containers/Pages/Home/actions.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"d\",\"initialState\",\"immer__WEBPACK_IMPORTED_MODULE_0__\",\"_actions__WEBPACK_IMPORTED_MODULE_1__\",\"hi\",\"count\",\"homeReducer\",\"state\",\"arguments\",\"length\",\"undefined\",\"action\",\"produce\",\"draft\",\"type\",\"NUM_COUNT\",\"num\",\"addCount\"],\"mappings\":\"8FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,eAAA,WAAA,OAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAaaI,EAAe,CAC1BG,GAAI,gBACJC,MAAO,GAiBMC,EAAAA,QAdK,WAAA,IAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAASP,EAAcU,EAAvBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAClBE,OAAAA,EAAAA,EAAAA,CAAQL,EAAO,SAAAM,GACb,OAAQF,EAAOG,MACb,KAAKC,EAAAA,UAEHF,EAAMR,OAASM,EAAOK,0CCvB9BnB,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,YAAA,WAAA,OAAAgB,IAAAlB,EAAAG,EAAAD,EAAA,WAAA,WAAA,OAAAkB,IAAO,IAAMF,EAAY,kBAElB,SAASE,EAASD,GACrB,MAAO,CACLF,KAAMC,EACNC,IAAAA\",\"sourcesContent\":[\"/*\\n * HomeReducer\\n *\\n * The reducer takes care of our data. Using actions, we can\\n * update our application state. To add a new action,\\n * add it to the switch statement in the reducer function\\n *\\n */\\n\\nimport produce from 'immer';\\nimport { NUM_COUNT } from './actions';\\n\\n// The initial state of the App\\nexport const initialState = {\\n  hi: 'hihihihiihihi',\\n  count: 1,\\n};\\n/* eslint-disable default-case, no-param-reassign */\\nconst homeReducer = (state = initialState, action) =>\\n  produce(state, draft => {\\n    switch (action.type) {\\n      case NUM_COUNT:\\n        // Delete prefixed '@' from the github username\\n        draft.count += action.num;\\n        break;\\n    }\\n  });\\n\\n// const homeReducer = (state = initialState, action) => {\\n//   return state;\\n// };\\n\\nexport default homeReducer;\\n\",\"export const NUM_COUNT = '/Home/NUM_COUNT';\\n\\nexport function addCount(num) {\\n    return {\\n      type: NUM_COUNT,\\n      num,\\n    };\\n  }\\n\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13,27],{128:function(n,t,i){\"use strict\";i.r(t),i.d(t,\"initialState\",function(){return o});var u=i(168),e=i(171),o={hi:\"hihihihiihihi\",count:1};t.default=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,t=arguments.length>1?arguments[1]:void 0;return Object(u.a)(n,function(n){switch(t.type){case e.NUM_COUNT:n.count+=t.num}})}},171:function(n,t,i){\"use strict\";i.r(t),i.d(t,\"NUM_COUNT\",function(){return u}),i.d(t,\"addCount\",function(){return e});var u=\"/Home/NUM_COUNT\";function e(n){return{type:u,num:n}}}}]);","extractedComments":[]}