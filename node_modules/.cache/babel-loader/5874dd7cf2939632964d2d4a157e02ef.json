{"ast":null,"code":"var _jsxFileName = \"/Users/yangpu-bt/personal/moonlt3/src/routes1.js\";\nimport React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport hello from './routes/Hello';\nimport hi from './routes/Hi';\nconst modules = [hello, hi]; // const Hello = Loadable({\n//    loader: () => import('./containers/Pages/Hello/List'),\n//    loading() {\n//      return  <div>加载中噢......</div>\n//    },\n// });\n// const Component1 = Loadable({\n//   loader: () => import('./Pages/Hello'),\n//   loading() {\n//     return <div>加载中噢......</div>\n//   },\n// });\n// 为了根据模块名称找到文件\n\nconst convFirstChartUpper = str => str.substr(0, 1).toUpperCase() + str.substr(1);\n\nexport default class CRouter extends Component {\n  // 关于权限部分先不写\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, Object.keys(modules).map(key => {\n      const route = (ele, parentPath) => {\n        const elePath = ele.path ? convFirstChartUpper(ele.path) : '';\n        const finalPath = \"\".concat(parentPath ? convFirstChartUpper(parentPath) : '', \"/\").concat(elePath);\n        const Component = Loadable({\n          loader: () => import(\"./containers/Pages/\".concat(finalPath, \"}\")).then(console.log(32222)),\n\n          loading() {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, \"\\u52A0\\u8F7D\\u4E2D\\u5662......\");\n          }\n\n        }); // const Hello = import(`../containers/Pages/Hello`);\n\n        console.log(Component);\n        console.log(finalPath);\n        return React.createElement(Component, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }); // return (\n        //   <Route\n        //     key={ele.path}\n        //     // exact\n        //     path={finalPath}\n        //     render={props => {\n        //       const reg = /\\?\\S*/g;\n        //       // 匹配?及其以后字符串\n        //       const queryParams = window.location.hash.match(reg);\n        //       // 去除?的参数\n        //       const { params } = props.match;\n        //       Object.keys(params).forEach(key => {\n        //         params[key] = params[key] && params[key].replace(reg, '');\n        //       })\n        //       props.match.params = { ...params };\n        //       const merge = { ...props, query: {} };\n        //       const WrappedComponent = (\n        //         <Component {...merge}/>\n        //       )\n        //       return WrappedComponent;\n        //     }}\n        //   ></Route>\n        // )\n      };\n\n      console.log(ele.child ? ele.child.map(r => route(r, ele.path)) : route(ele)); // return ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n\n      return route(ele);\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/yangpu-bt/personal/moonlt3/src/routes1.js"],"names":["React","Component","Loadable","Route","Redirect","Switch","hello","hi","modules","convFirstChartUpper","str","substr","toUpperCase","CRouter","render","Object","keys","map","key","route","ele","parentPath","elePath","path","finalPath","loader","then","console","log","loading","child","r"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,kBAAxC;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,MAAMC,OAAO,GAAG,CACdF,KADc,EAEdC,EAFc,CAAhB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAME,mBAAmB,GAAIC,GAAD,IAASA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiBC,WAAjB,KAAiCF,GAAG,CAACC,MAAJ,CAAW,CAAX,CAAtE;;AAEA,eAAe,MAAME,OAAN,SAAsBZ,SAAtB,CAAgC;AAC7C;AAEAa,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIC,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBS,GAArB,CAA0BC,GAAD,IAAS;AAElC,YAAMC,KAAK,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACjC,cAAMC,OAAO,GAAGF,GAAG,CAACG,IAAJ,GAAWd,mBAAmB,CAACW,GAAG,CAACG,IAAL,CAA9B,GAA2C,EAA3D;AACA,cAAMC,SAAS,aAAMH,UAAU,GAAGZ,mBAAmB,CAACY,UAAD,CAAtB,GAAqC,EAArD,cAA2DC,OAA3D,CAAf;AACA,cAAMrB,SAAS,GAAGC,QAAQ,CAAC;AACzBuB,UAAAA,MAAM,EAAE,MAAM,oCAA6BD,SAA7B,QAA2CE,IAA3C,CAAgDC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAhD,CADW;;AAEzBC,UAAAA,OAAO,GAAG;AACR,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AACD;;AAJwB,SAAD,CAA1B,CAHiC,CASjC;;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY3B,SAAZ;AACA0B,QAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,eAAS,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT,CAZiC,CAajC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD,OArCD;;AAsCAG,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACU,KAAJ,GAAYV,GAAG,CAACU,KAAJ,CAAUb,GAAV,CAAec,CAAD,IAAOZ,KAAK,CAACY,CAAD,EAAIX,GAAG,CAACG,IAAR,CAA1B,CAAZ,GAAuDJ,KAAK,CAACC,GAAD,CAAxE,EAxCkC,CAyClC;;AACA,aAAOD,KAAK,CAACC,GAAD,CAAZ;AACD,KA3CC,CAFJ,CADF;AAmDD;;AAxD4C","sourcesContent":["import React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport hello from './routes/Hello';\nimport hi from './routes/Hi';\nconst modules = [\n  hello,\n  hi,\n];\n// const Hello = Loadable({\n//    loader: () => import('./containers/Pages/Hello/List'),\n//    loading() {\n//      return  <div>加载中噢......</div>\n//    },\n// });\n// const Component1 = Loadable({\n//   loader: () => import('./Pages/Hello'),\n//   loading() {\n//     return <div>加载中噢......</div>\n//   },\n// });\n\n// 为了根据模块名称找到文件\nconst convFirstChartUpper = (str) => str.substr(0, 1).toUpperCase() + str.substr(1);\n\nexport default class CRouter extends Component {\n  // 关于权限部分先不写\n\n  render() {\n    \n    return (\n      <div>\n        {\n          Object.keys(modules).map((key) => {\n          \n          const route = (ele, parentPath) => {\n            const elePath = ele.path ? convFirstChartUpper(ele.path) : '';\n            const finalPath = `${parentPath ? convFirstChartUpper(parentPath) : ''}/${elePath}`;\n            const Component = Loadable({\n              loader: () => import(`./containers/Pages/${finalPath}}`).then(console.log(32222)),\n              loading() {\n                return <div>加载中噢......</div>\n              },\n            });\n            // const Hello = import(`../containers/Pages/Hello`);\n            console.log(Component);\n            console.log(finalPath);\n            return ( <Component />)\n            // return (\n            //   <Route\n            //     key={ele.path}\n            //     // exact\n            //     path={finalPath}\n            //     render={props => {\n            //       const reg = /\\?\\S*/g;\n            //       // 匹配?及其以后字符串\n            //       const queryParams = window.location.hash.match(reg);\n            //       // 去除?的参数\n            //       const { params } = props.match;\n            //       Object.keys(params).forEach(key => {\n            //         params[key] = params[key] && params[key].replace(reg, '');\n            //       })\n            //       props.match.params = { ...params };\n            //       const merge = { ...props, query: {} };\n            //       const WrappedComponent = (\n            //         <Component {...merge}/>\n            //       )\n            //       return WrappedComponent;\n            //     }}\n              \n            //   ></Route>\n            // )\n          }\n          console.log(ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele))\n          // return ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n          return route(ele);\n        })}\n        \n        {/* <Route render={() => <Redirect to=\"/404\" />} /> */}\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}