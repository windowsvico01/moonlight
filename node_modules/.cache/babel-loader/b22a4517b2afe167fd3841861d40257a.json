{"ast":null,"code":"import _objectSpread from \"/Users/yangpu-bt/personal/moonlt3/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/**\n *  组合所有的reducer并且暴露出组合好的reducers；\n */\nimport { fromJS } from 'immutable';\nimport { combineReducers } from 'redux-immutable'; // 他的作用是将整个store都变成immutable对象，而不仅仅是它的值\n\nimport { LOCATION_CHANGE } from 'react-router-redux'; // 通知router改变\n// routeReducer 的初始state\n\nconst routeInitialState = fromJS({\n  locationBeforeTransitions: null\n}); // routeReducer 记录路由信息到store\n\nfunction routerReducer(state = routeInitialState, action) {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      return state.merge({\n        locationBeforeTransitions: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n/**\n * @export\n * @param {*} asyncReducers 异步注入的reducer\n * @returns\n */\n\n\nexport default function createReducer(asyncReducers) {\n  return combineReducers(_objectSpread({\n    route: routerReducer\n  }, asyncReducers));\n}","map":{"version":3,"sources":["/Users/yangpu-bt/personal/moonlt3/src/rootReducer.js"],"names":["fromJS","combineReducers","LOCATION_CHANGE","routeInitialState","locationBeforeTransitions","routerReducer","state","action","type","merge","payload","createReducer","asyncReducers","route"],"mappings":";;AAAA;;;AAIA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,eAAT,QAAgC,iBAAhC,C,CAAmD;;AACnD,SAASC,eAAT,QAAgC,oBAAhC,C,CAAsD;AAEtD;;AACA,MAAMC,iBAAiB,GAAGH,MAAM,CAAC;AAC/BI,EAAAA,yBAAyB,EAAE;AADI,CAAD,CAAhC,C,CAGA;;AACA,SAASC,aAAT,CAAuBC,KAAK,GAAGH,iBAA/B,EAAkDI,MAAlD,EAA0D;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,eAAL;AACE,aAAOI,KAAK,CAACG,KAAN,CAAY;AACjBL,QAAAA,yBAAyB,EAAEG,MAAM,CAACG;AADjB,OAAZ,CAAP;;AAGF;AACE,aAAOJ,KAAP;AANJ;AAQD;AAED;;;;;;;AAKA,eAAe,SAASK,aAAT,CAAuBC,aAAvB,EAAsC;AACnD,SAAOX,eAAe;AACpBY,IAAAA,KAAK,EAAER;AADa,KAEjBO,aAFiB,EAAtB;AAID","sourcesContent":["/**\n *  组合所有的reducer并且暴露出组合好的reducers；\n */\n\nimport { fromJS } from 'immutable';\nimport { combineReducers } from 'redux-immutable'; // 他的作用是将整个store都变成immutable对象，而不仅仅是它的值\nimport { LOCATION_CHANGE } from 'react-router-redux'; // 通知router改变\n\n// routeReducer 的初始state\nconst routeInitialState = fromJS({\n  locationBeforeTransitions: null,\n})\n// routeReducer 记录路由信息到store\nfunction routerReducer(state = routeInitialState, action) {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      return state.merge({\n        locationBeforeTransitions: action.payload,\n      });\n    default:\n      return state;\n  }\n}\n\n/**\n * @export\n * @param {*} asyncReducers 异步注入的reducer\n * @returns\n */\nexport default function createReducer(asyncReducers) {\n  return combineReducers({\n    route: routerReducer,\n    ...asyncReducers\n  });\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}