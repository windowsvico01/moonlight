{"ast":null,"code":"var _jsxFileName = \"/Users/yangpu-bt/personal/moonlt3/src/routes/index.js\";\nimport React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport hello from './Hello';\nimport hi from './Hi';\nconst modules = [hello, hi]; // 为了根据模块名称找到文件\n\nconst convFirstChartUpper = str => str.substr(0, 1).toUpperCase() + str.substr(1);\n\nexport default class CRouter extends Component {\n  // 关于权限部分先不写\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, modules.forEach(ele => {\n      const route = (ele, parentPath) => {\n        const elePath = convFirstChartUpper(ele.path);\n        const finalPath = \"\".concat(convFirstChartUpper(parentPath), \"/\").concat(elePath); // const Component = Loadable({\n        //   loader: () => import(`../containers/Pages/${finalPath}}`).then(console.log(32222)),\n        //   loading: <div>加载中噢......</div>,\n        // });\n\n        const Component = import(\"../containers/Pages/Hello\");\n        console.log(Component);\n        console.log(finalPath);\n        return React.createElement(Component, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }); // return (\n        //   <Route\n        //     key={ele.path}\n        //     // exact\n        //     path={finalPath}\n        //     render={props => {\n        //       const reg = /\\?\\S*/g;\n        //       // 匹配?及其以后字符串\n        //       const queryParams = window.location.hash.match(reg);\n        //       // 去除?的参数\n        //       const { params } = props.match;\n        //       Object.keys(params).forEach(key => {\n        //         params[key] = params[key] && params[key].replace(reg, '');\n        //       })\n        //       props.match.params = { ...params };\n        //       const merge = { ...props, query: {} };\n        //       const WrappedComponent = (\n        //         <Component {...merge}/>\n        //       )\n        //       return WrappedComponent;\n        //     }}\n        //   ></Route>\n        // )\n      };\n\n      console.log(ele.child ? ele.child.map(r => route(r, ele.path)) : route(ele)); // return ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n\n      return route(ele);\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/yangpu-bt/personal/moonlt3/src/routes/index.js"],"names":["React","Component","Loadable","Route","Redirect","Switch","hello","hi","modules","convFirstChartUpper","str","substr","toUpperCase","CRouter","render","forEach","ele","route","parentPath","elePath","path","finalPath","console","log","child","map","r"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,kBAAxC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,EAAP,MAAe,MAAf;AAEA,MAAMC,OAAO,GAAG,CACdF,KADc,EAEdC,EAFc,CAAhB,C,CAKA;;AACA,MAAME,mBAAmB,GAAIC,GAAD,IAASA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiBC,WAAjB,KAAiCF,GAAG,CAACC,MAAJ,CAAW,CAAX,CAAtE;;AAEA,eAAe,MAAME,OAAN,SAAsBZ,SAAtB,CAAgC;AAC7C;AAEAa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,OAAO,CAACO,OAAR,CAAiBC,GAAD,IAAS;AACxB,YAAMC,KAAK,GAAG,CAACD,GAAD,EAAME,UAAN,KAAqB;AACjC,cAAMC,OAAO,GAAGV,mBAAmB,CAACO,GAAG,CAACI,IAAL,CAAnC;AACA,cAAMC,SAAS,aAAMZ,mBAAmB,CAACS,UAAD,CAAzB,cAAyCC,OAAzC,CAAf,CAFiC,CAGjC;AACA;AACA;AACA;;AACA,cAAMlB,SAAS,GAAG,mCAAlB;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAYtB,SAAZ;AACAqB,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,eAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAViC,CAWjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACD,OAnCD;;AAoCAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACQ,KAAJ,GAAYR,GAAG,CAACQ,KAAJ,CAAUC,GAAV,CAAeC,CAAD,IAAOT,KAAK,CAACS,CAAD,EAAIV,GAAG,CAACI,IAAR,CAA1B,CAAZ,GAAuDH,KAAK,CAACD,GAAD,CAAxE,EArCwB,CAsCxB;;AACA,aAAOC,KAAK,CAACD,GAAD,CAAZ;AACD,KAxCA,CADH,CADF;AA8CD;;AAlD4C","sourcesContent":["import React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport hello from './Hello';\nimport hi from './Hi';\n\nconst modules = [\n  hello,\n  hi,\n];\n\n// 为了根据模块名称找到文件\nconst convFirstChartUpper = (str) => str.substr(0, 1).toUpperCase() + str.substr(1);\n\nexport default class CRouter extends Component {\n  // 关于权限部分先不写\n\n  render() {\n    return (\n      <Switch>\n        {modules.forEach((ele) => {\n          const route = (ele, parentPath) => {\n            const elePath = convFirstChartUpper(ele.path);\n            const finalPath = `${convFirstChartUpper(parentPath)}/${elePath}`;\n            // const Component = Loadable({\n            //   loader: () => import(`../containers/Pages/${finalPath}}`).then(console.log(32222)),\n            //   loading: <div>加载中噢......</div>,\n            // });\n            const Component = import(`../containers/Pages/Hello`);\n            console.log(Component);\n            console.log(finalPath);\n            return <Component />\n            // return (\n            //   <Route\n            //     key={ele.path}\n            //     // exact\n            //     path={finalPath}\n            //     render={props => {\n            //       const reg = /\\?\\S*/g;\n            //       // 匹配?及其以后字符串\n            //       const queryParams = window.location.hash.match(reg);\n            //       // 去除?的参数\n            //       const { params } = props.match;\n            //       Object.keys(params).forEach(key => {\n            //         params[key] = params[key] && params[key].replace(reg, '');\n            //       })\n            //       props.match.params = { ...params };\n            //       const merge = { ...props, query: {} };\n            //       const WrappedComponent = (\n            //         <Component {...merge}/>\n            //       )\n            //       return WrappedComponent;\n            //     }}\n              \n            //   ></Route>\n            // )\n          }\n          console.log(ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele))\n          // return ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n          return route(ele);\n        })}\n        {/* <Route render={() => <Redirect to=\"/404\" />} /> */}\n      </Switch>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}