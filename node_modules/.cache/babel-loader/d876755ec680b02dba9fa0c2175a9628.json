{"ast":null,"code":"var _jsxFileName = \"/Users/yangpu-bt/personal/moonlt3/src/routes1.js\";\nimport React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport hello from './routes/Hello';\nimport hi from './routes/Hi';\nconst modules = {\n  menus: [hello, hi],\n  others: []\n}; // const Hello = Loadable({\n//    loader: () => import('./containers/Pages/Hello/List'),\n//    loading() {\n//      return  <div>加载中噢......</div>\n//    },\n// });\n// const Component1 = Loadable({\n//   loader: () => import('./Pages/Hello'),\n//   loading() {\n//     return <div>加载中噢......</div>\n//   },\n// });\n// 为了根据模块名称找到文件\n\nconst convFirstChartUpper = str => str.substr(0, 1).toUpperCase() + str.substr(1);\n\nexport default class CRouter extends Component {\n  // 关于权限部分先不写\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, // Object.keys(modules).map((key) => {\n    //   console.log(modules[key]);\n    modules.menus.map(ele => {\n      console.log(ele);\n\n      const route = (ele, parentPath) => {\n        console.log(ele);\n        const elePath = ele.path ? convFirstChartUpper(ele.path) : '';\n        console.log(elePath);\n        console.log(parentPath); // const routePath = `/${parentPath ? convFirstChartUpper(parentPath)+'/' : ''}${elePath}`;\n\n        const finalPath = \"\".concat(parentPath ? convFirstChartUpper(parentPath) + '/' : '').concat(elePath);\n        console.log(\"\".concat(finalPath));\n        const Component = Loadable({\n          loader: () => import(\"./containers/Pages/\".concat(finalPath)),\n\n          loading() {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, \"\\u52A0\\u8F7D\\u4E2D\\u5662......\");\n          }\n\n        });\n        return React.createElement(Route, {\n          key: ele.path,\n          exact: true,\n          path: elePath,\n          component: Component // render={(props) => {\n          //   return <Component {...props}/>\n          // }}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }) // <span key={ele.path}>key={ele.path}------path={finalPath}--render|||</span>\n        ;\n      };\n\n      return ele.child && ele.child.length > 0 ? ele.child.map(r => route(r, ele.path)) : route(ele);\n    }) // const route = (ele, parentPath) => {\n    //   const elePath = ele.path ? convFirstChartUpper(ele.path) : '';\n    //   const finalPath = `${parentPath ? convFirstChartUpper(parentPath) : ''}/${elePath}`;\n    //   const Component = Loadable({\n    //     loader: () => import(`./containers/Pages/${finalPath}}`).then(console.log(32222)),\n    //     loading() {\n    //       return <div>加载中噢......</div>\n    //     },\n    //   });\n    //   // const Hello = import(`../containers/Pages/Hello`);\n    //   console.log(Component);\n    //   console.log(finalPath);\n    //   return ( <Component />)\n    //   // return (\n    //   //   <Route\n    //   //     key={ele.path}\n    //   //     // exact\n    //   //     path={finalPath}\n    //   //     render={props => {\n    //   //       const reg = /\\?\\S*/g;\n    //   //       // 匹配?及其以后字符串\n    //   //       const queryParams = window.location.hash.match(reg);\n    //   //       // 去除?的参数\n    //   //       const { params } = props.match;\n    //   //       Object.keys(params).forEach(key => {\n    //   //         params[key] = params[key] && params[key].replace(reg, '');\n    //   //       })\n    //   //       props.match.params = { ...params };\n    //   //       const merge = { ...props, query: {} };\n    //   //       const WrappedComponent = (\n    //   //         <Component {...merge}/>\n    //   //       )\n    //   //       return WrappedComponent;\n    //   //     }}\n    //   //   ></Switch>\n    //   // )\n    // }\n    // console.log(ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele))\n    // return ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n    // return route(ele);\n    // })\n    , React.createElement(Route, {\n      render: () => React.createElement(Redirect, {\n        to: \"/404\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/yangpu-bt/personal/moonlt3/src/routes1.js"],"names":["React","Component","Loadable","Route","Redirect","Switch","hello","hi","modules","menus","others","convFirstChartUpper","str","substr","toUpperCase","CRouter","render","map","ele","console","log","route","parentPath","elePath","path","finalPath","loader","loading","child","length","r"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport hello from './routes/Hello';\nimport hi from './routes/Hi';\nconst modules = {\n  menus: [\n    hello,\n    hi,\n  ],\n  others: []\n};\n// const Hello = Loadable({\n//    loader: () => import('./containers/Pages/Hello/List'),\n//    loading() {\n//      return  <div>加载中噢......</div>\n//    },\n// });\n// const Component1 = Loadable({\n//   loader: () => import('./Pages/Hello'),\n//   loading() {\n//     return <div>加载中噢......</div>\n//   },\n// });\n\n// 为了根据模块名称找到文件\nconst convFirstChartUpper = (str) => str.substr(0, 1).toUpperCase() + str.substr(1);\n\nexport default class CRouter extends Component {\n  // 关于权限部分先不写\n\n  render() {\n    \n    return (\n      <Switch>\n        {\n          // Object.keys(modules).map((key) => {\n          //   console.log(modules[key]);\n            modules.menus.map(ele => {\n              console.log(ele);\n            const route = (ele, parentPath) => {\n              console.log(ele);\n              const elePath = ele.path ? convFirstChartUpper(ele.path) : '';\n              console.log(elePath);\n              console.log(parentPath);\n              // const routePath = `/${parentPath ? convFirstChartUpper(parentPath)+'/' : ''}${elePath}`;\n              const finalPath = `${parentPath ? convFirstChartUpper(parentPath)+'/' : ''}${elePath}`;\n              console.log(`${finalPath}`);\n              const Component = Loadable({\n                loader: () => import(`./containers/Pages/${finalPath}`),\n                loading() {\n                  return <div>加载中噢......</div>\n                },\n              });\n              return (\n                <Route\n                  key={ele.path}\n                  exact\n                  path={elePath}\n                  component={Component}\n                  // render={(props) => {\n                  //   return <Component {...props}/>\n                  // }}\n                />  \n                // <span key={ele.path}>key={ele.path}------path={finalPath}--render|||</span>\n              )\n            }\n              return (ele.child && ele.child.length > 0) ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n            })\n          \n          // const route = (ele, parentPath) => {\n          //   const elePath = ele.path ? convFirstChartUpper(ele.path) : '';\n          //   const finalPath = `${parentPath ? convFirstChartUpper(parentPath) : ''}/${elePath}`;\n          //   const Component = Loadable({\n          //     loader: () => import(`./containers/Pages/${finalPath}}`).then(console.log(32222)),\n          //     loading() {\n          //       return <div>加载中噢......</div>\n          //     },\n          //   });\n          //   // const Hello = import(`../containers/Pages/Hello`);\n          //   console.log(Component);\n          //   console.log(finalPath);\n          //   return ( <Component />)\n          //   // return (\n          //   //   <Route\n          //   //     key={ele.path}\n          //   //     // exact\n          //   //     path={finalPath}\n          //   //     render={props => {\n          //   //       const reg = /\\?\\S*/g;\n          //   //       // 匹配?及其以后字符串\n          //   //       const queryParams = window.location.hash.match(reg);\n          //   //       // 去除?的参数\n          //   //       const { params } = props.match;\n          //   //       Object.keys(params).forEach(key => {\n          //   //         params[key] = params[key] && params[key].replace(reg, '');\n          //   //       })\n          //   //       props.match.params = { ...params };\n          //   //       const merge = { ...props, query: {} };\n          //   //       const WrappedComponent = (\n          //   //         <Component {...merge}/>\n          //   //       )\n          //   //       return WrappedComponent;\n          //   //     }}\n              \n          //   //   ></Switch>\n          //   // )\n          // }\n          // console.log(ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele))\n          // return ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n          // return route(ele);\n        // })\n        }\n        \n        <Route render={() => <Redirect to=\"/404\" />} />\n      </Switch>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}