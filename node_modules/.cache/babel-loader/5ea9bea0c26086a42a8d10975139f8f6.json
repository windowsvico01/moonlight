{"ast":null,"code":"var _jsxFileName = \"/Users/yangpu-bt/personal/moonlt3/src/routes/index.js\";\nimport React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport hello from './Hello';\nimport hi from './Hi';\nconst modules = [hello, hi]; // const Hello = Loadable({\n//    loader: () => import('../containers/Pages/Hello'),\n//    loading: <div>加载中噢......</div>,\n// });\n// 为了根据模块名称找到文件\n\nconst convFirstChartUpper = str => str.substr(0, 1).toUpperCase() + str.substr(1);\n\nexport default class CRouter extends Component {\n  // 关于权限部分先不写\n  render() {\n    const Component = Loadable({\n      loader: () => import(\"@/containers/Pages/Hello}\").then(console.log(32222)),\n\n      loading() {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"\\u52A0\\u8F7D\\u4E2D\\u5662......\");\n      }\n\n    });\n    return React.createElement(Component, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }) // <Switch>\n    //   {modules.forEach((ele) => {\n    //     const route = (ele, parentPath) => {\n    //       const elePath = ele.path ? convFirstChartUpper(ele.path) : '';\n    //       const finalPath = `${parentPath ? convFirstChartUpper(parentPath) : ''}/${elePath}`;\n    //       const Component = Loadable({\n    //         loader: () => import(`../containers/Pages/${finalPath}}`).then(console.log(32222)),\n    //         loading() {\n    //           return <div>加载中噢......</div>\n    //         },\n    //       });\n    //       // const Hello = import(`../containers/Pages/Hello`);\n    //       console.log(Component);\n    //       console.log(finalPath);\n    //       return (\n    //         <Route\n    //           key={ele.path}\n    //           // exact\n    //           path={finalPath}\n    //           render={props => {\n    //             const reg = /\\?\\S*/g;\n    //             // 匹配?及其以后字符串\n    //             const queryParams = window.location.hash.match(reg);\n    //             // 去除?的参数\n    //             const { params } = props.match;\n    //             Object.keys(params).forEach(key => {\n    //               params[key] = params[key] && params[key].replace(reg, '');\n    //             })\n    //             props.match.params = { ...params };\n    //             const merge = { ...props, query: {} };\n    //             const WrappedComponent = (\n    //               <Component {...merge}/>\n    //             )\n    //             return WrappedComponent;\n    //           }}\n    //         ></Route>\n    //       )\n    //     }\n    //     console.log(ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele))\n    //     return ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n    //     // return route(ele);\n    //   })}\n    //   {/* <Route render={() => <Redirect to=\"/404\" />} /> */}\n    // </Switch>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/yangpu-bt/personal/moonlt3/src/routes/index.js"],"names":["React","Component","Loadable","Route","Redirect","Switch","hello","hi","modules","convFirstChartUpper","str","substr","toUpperCase","CRouter","render","loader","then","console","log","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,kBAAxC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,MAAMC,OAAO,GAAG,CACdF,KADc,EAEdC,EAFc,CAAhB,C,CAIA;AACA;AACA;AACA;AAEA;;AACA,MAAME,mBAAmB,GAAIC,GAAD,IAASA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiBC,WAAjB,KAAiCF,GAAG,CAACC,MAAJ,CAAW,CAAX,CAAtE;;AAEA,eAAe,MAAME,OAAN,SAAsBZ,SAAtB,CAAgC;AAC7C;AAEAa,EAAAA,MAAM,GAAG;AACP,UAAMb,SAAS,GAAGC,QAAQ,CAAC;AACzBa,MAAAA,MAAM,EAAE,MAAM,oCAAoCC,IAApC,CAAyCC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAzC,CADW;;AAEzBC,MAAAA,OAAO,GAAG;AACR,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAP;AACD;;AAJwB,KAAD,CAA1B;AAMA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CF;AAgDD;;AA1D4C","sourcesContent":["import React, { Component } from 'react';\nimport Loadable from 'react-loadable';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport hello from './Hello';\nimport hi from './Hi';\nconst modules = [\n  hello,\n  hi,\n];\n// const Hello = Loadable({\n//    loader: () => import('../containers/Pages/Hello'),\n//    loading: <div>加载中噢......</div>,\n// });\n\n// 为了根据模块名称找到文件\nconst convFirstChartUpper = (str) => str.substr(0, 1).toUpperCase() + str.substr(1);\n\nexport default class CRouter extends Component {\n  // 关于权限部分先不写\n\n  render() {\n    const Component = Loadable({\n      loader: () => import(`@/containers/Pages/Hello}`).then(console.log(32222)),\n      loading() {\n        return <div>加载中噢......</div>\n      },\n    });\n    return (\n      <Component/>\n      // <Switch>\n      //   {modules.forEach((ele) => {\n      //     const route = (ele, parentPath) => {\n      //       const elePath = ele.path ? convFirstChartUpper(ele.path) : '';\n      //       const finalPath = `${parentPath ? convFirstChartUpper(parentPath) : ''}/${elePath}`;\n      //       const Component = Loadable({\n      //         loader: () => import(`../containers/Pages/${finalPath}}`).then(console.log(32222)),\n      //         loading() {\n      //           return <div>加载中噢......</div>\n      //         },\n      //       });\n      //       // const Hello = import(`../containers/Pages/Hello`);\n      //       console.log(Component);\n      //       console.log(finalPath);\n      //       return (\n      //         <Route\n      //           key={ele.path}\n      //           // exact\n      //           path={finalPath}\n      //           render={props => {\n      //             const reg = /\\?\\S*/g;\n      //             // 匹配?及其以后字符串\n      //             const queryParams = window.location.hash.match(reg);\n      //             // 去除?的参数\n      //             const { params } = props.match;\n      //             Object.keys(params).forEach(key => {\n      //               params[key] = params[key] && params[key].replace(reg, '');\n      //             })\n      //             props.match.params = { ...params };\n      //             const merge = { ...props, query: {} };\n      //             const WrappedComponent = (\n      //               <Component {...merge}/>\n      //             )\n      //             return WrappedComponent;\n      //           }}\n              \n      //         ></Route>\n      //       )\n      //     }\n      //     console.log(ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele))\n      //     return ele.child ? ele.child.map((r) => route(r, ele.path)) : route(ele);\n      //     // return route(ele);\n      //   })}\n      //   {/* <Route render={() => <Redirect to=\"/404\" />} /> */}\n      // </Switch>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}