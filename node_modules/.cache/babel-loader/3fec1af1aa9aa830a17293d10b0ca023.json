{"ast":null,"code":"import _objectSpread from \"/Users/yangpu-bt/personal/moonlt3/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/yangpu-bt/personal/moonlt3/src/components/Sider/index.js\";\nimport React, { Component } from 'react';\nimport { Layout, Menu, Icon, Slider } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { spawn } from '../../../node_modules/redux-saga/effects';\nconst SubMenu = Menu.SubMenu;\nconst Header = Layout.Header,\n      Content = Layout.Content,\n      Sider = Layout.Sider;\nconst source = [{\n  key: 'hello',\n  path: '/hello',\n  title: 'hello',\n  icon: 'heart',\n  children: [{\n    key: 'helloList',\n    path: '/hello/list',\n    title: '列表页',\n    icon: 'dollar'\n  }, {\n    key: 'helloDetail',\n    path: '/hello/detail',\n    title: '详情页',\n    icon: 'file-text'\n  }]\n}, {\n  key: 'hi',\n  path: '/hi/1',\n  title: 'hi页面',\n  icon: 'smile'\n}];\n\nclass MSider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleCollapsed = () => {\n      this.setState(_objectSpread({}, this.state, {\n        inlineCollapsed: !this.state.inlineCollapsed\n      }));\n    };\n\n    this.state = {\n      inlineCollapsed: false\n    };\n  }\n\n  render() {\n    const inlineCollapsed = this.state.inlineCollapsed;\n    return React.createElement(Sider, {\n      width: 250,\n      style: {\n        background: '#fff'\n      },\n      collapsible: true,\n      collapsed: inlineCollapsed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      mode: \"inline\" // inlineCollapsed={true}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, source.map(item => {\n      const tMenu = menu => {\n        if (menu.children && menu.children.length) {\n          return React.createElement(SubMenu, {\n            key: menu.key,\n            title: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68\n              },\n              __self: this\n            }, menu.icon && React.createElement(Icon, {\n              type: menu.icon,\n              style: {\n                verticalAlign: '0.1em'\n              },\n              theme: \"twoTone\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, menu.title)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, menu.children.map(cMenu => tMenu(cMenu)));\n        } else {\n          return React.createElement(Menu.Item, {\n            key: menu.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, menu.icon && React.createElement(Icon, {\n            type: menu.icon,\n            style: {\n              verticalAlign: '0.1em'\n            },\n            theme: \"twoTone\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, menu.title)));\n        }\n      };\n\n      return tMenu(item);\n    })), React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: () => this.toggleCollapsed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, inlineCollapsed ? '展开' : '合住')));\n  }\n\n}\n\nexport default withRouter(MSider);","map":{"version":3,"sources":["/Users/yangpu-bt/personal/moonlt3/src/components/Sider/index.js"],"names":["React","Component","Layout","Menu","Icon","Slider","withRouter","spawn","SubMenu","Header","Content","Sider","source","key","path","title","icon","children","MSider","constructor","props","toggleCollapsed","setState","state","inlineCollapsed","render","background","map","item","tMenu","menu","length","verticalAlign","cMenu","width","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Menu, Icon, Slider } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { spawn } from '../../../node_modules/redux-saga/effects';\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst source = [\n  { \n    key: 'hello',\n    path: '/hello',\n    title: 'hello',\n    icon: 'heart',\n    children: [\n      {\n        key: 'helloList',\n        path: '/hello/list',\n        title: '列表页',\n        icon: 'dollar',\n      }, {\n        key: 'helloDetail',\n        path: '/hello/detail',\n        title: '详情页',\n        icon: 'file-text',\n      }\n    ]\n  }, {\n    key: 'hi',\n    path: '/hi/1',\n    title: 'hi页面',\n    icon: 'smile',\n  }\n]\n\nclass MSider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inlineCollapsed: false,\n    }\n  }\n  toggleCollapsed = () => {\n    this.setState({\n      ...this.state,\n      inlineCollapsed: !this.state.inlineCollapsed,\n    });\n  }\n  render() {\n    const { inlineCollapsed } = this.state;\n    return (\n      <Sider\n        width={250}\n        style={{ background: '#fff' }}\n        collapsible\n        collapsed={inlineCollapsed}\n      >\n        <Menu\n          mode=\"inline\"\n          // inlineCollapsed={true}\n        >\n          {source.map(item => {\n            const tMenu = (menu) => {\n              if (menu.children && menu.children.length) {\n                return (\n                  <SubMenu\n                    key={menu.key}\n                    title={(\n                      <span>\n                        {menu.icon && (<Icon type={menu.icon} style={{ verticalAlign: '0.1em' }} theme=\"twoTone\"/>)}\n                        <span>{menu.title}</span>\n                      </span>\n                    )}\n                  >\n                    {menu.children.map(cMenu => tMenu(cMenu))}\n                  </SubMenu>\n                )\n              } else {\n                return (\n                  <Menu.Item key={menu.key}>\n                    <span>\n                      {menu.icon  && <Icon type={menu.icon} style={{ verticalAlign: '0.1em' }} theme=\"twoTone\"/>}\n                      <span>{menu.title}</span>\n                    </span>\n                  </Menu.Item>\n                )\n              }\n            };\n            return tMenu(item);\n          })}\n        </Menu>\n        <div style={{ width: '100%', textAlign: 'center' }}>\n          <a onClick={()=>this.toggleCollapsed()}>{inlineCollapsed ? '展开' : '合住'}</a>\n        </div>\n      </Sider>\n    );\n  }\n}\n\nexport default withRouter(MSider);\n\n"]},"metadata":{},"sourceType":"module"}